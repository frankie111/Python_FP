from functools import reduce

from lab5.models.Identifiable import Identifiable


class Order(Identifiable):
    def __init__(self, id_=None, customer_id=None, items=None, total_price=None, dict_=None):
        super().__init__(id_)
        self.__customer_id = customer_id
        self.__items = items
        self.__total_price = total_price
        if dict_ is not None:
            self.__dict__ = dict_

    def __eq__(self, other):
        return super().__eq__(other) and self.__customer_id == other.__customer_id and self.__items == other.__items

    def __str__(self):
        return super().__str__() + f", Kunden-ID = '{self.__customer_id}', Artikel = '{self.__items}', Gesamtkosten = '{self.__total_price}'"

    def __hash__(self):
        return hash(self.__str__())

    @property
    def customer_id(self):
        return self.__customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        self.__customer_id = customer_id

    @property
    def items(self):
        return self.__items

    @items.setter
    def items(self, items):
        self.__items = items

    @property
    def total_price(self):
        return self.__total_price

    @total_price.setter
    def total_price(self, total_price):
        self.__total_price = total_price

    def compute_total_price(self):
        """
        Adds up the prices from the items list
        :returns: Total order price
        """
        self.__total_price = reduce(lambda a, m: a + m.price, self.__items, 0)
        return self.__total_price

    def __generate_bill(self):
        """
        Generates and returns a bill, containing the items of this order
        :returns: The bill as a string
        """
        self.compute_total_price()
        bill_lines = list(map(lambda m: f"{m.id} " + "." * (30 - len(m.id)) + f" {m.price}", self.__items))
        bill_lines.insert(0, "Rechnung:\n")
        bill_lines.append(f"\nGesamtkosten " + '.' * 18 + f" {self.__total_price}")

        return reduce(lambda a, b: a + '\n' + b, bill_lines)

    def print_bill(self):
        """
        Prints the bill of this order generated by the __generate_bill method
        """
        print(self.__generate_bill())

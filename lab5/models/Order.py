from functools import reduce

from lab5.models.Identifiable import Identifiable


class Order(Identifiable):
    def __init__(self, id_=None, client_id=None, meals=None, dict_=None):
        super().__init__(id_)
        self.__client_id = client_id
        self.__meals = meals
        self.__total_price = None
        if dict_ is not None:
            self.__dict__ = dict_

    @property
    def client_id(self):
        return self.__client_id

    @client_id.setter
    def client_id(self, client_id):
        self.__client_id = client_id

    @property
    def meals(self):
        return self.__meals

    @meals.setter
    def meals(self, meals):
        self.__meals = meals

    @property
    def total_price(self):
        return self.__total_price

    @total_price.setter
    def total_price(self, total_price):
        self.__total_price = total_price

    def compute_total_price(self):
        """
        Adds up the prices from the self.__meals list
        :returns: Total order price
        """
        self.__total_price = reduce(lambda a, m: a + m.price, self.__meals, 0)
        return self.__total_price

    def __generate_bill(self):
        """
        Generates and returns a bill, containing the meals in self.__meals
        :returns: The bill as a string
        """
        self.compute_total_price()
        bill_lines = list(map(lambda m: f"{m.id} " + "." * (30 - len(m.id)) + f" {m.price}", self.__meals))
        bill_lines.insert(0, "Rechnung:\n")
        bill_lines.append(f"\nGesamtkosten " + '.' * 18 + f" {self.__total_price}")

        return reduce(lambda a, b: a + '\n' + b, bill_lines)

    def print_bill(self):
        """
        Prints the bill of this order generated by the __generate_bill method
        """
        print(self.__generate_bill())
